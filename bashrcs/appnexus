############################### bash_profile setup for Appnexus #############################

# temp commands
alias rs-work-queue='~/my_bin/schedulerd restart; ~/my_bin/workerd restart'
alias rs-fraudsvc='sudo ~/my_bin/fraudsvcd restart'
alias view-logs='sudo tail -300f /var/log/messages'
alias send='python ~/my_bin/sender.py'
alias mount-dev='sshfs jwang@64.210.63.215:/home/jwang ~/dev'

# fraud service
export FRAUD_SERVICE_DB_ENGINE='sqlite:////tmp/test.db' 

# ssh commands
alias jump='ssh -AY jwang@jump.nym1.adnxs.net'
alias dev='ssh -AY devbox' 

# sync commands
alias sync='rsync -avz --delete -e ssh'
alias sync-dot='sync ~/dotfiles devbox:/home/jwang'

# Database variables
vertica_path='/opt/vertica/bin/vsql'
my_un='jwang'
my_pw='Appnexus20130423'
sand_un_1='app_etl_optimization'
sand_p_1='TeWa2nDQx1Sw'
sand_p_2='san60pt'

# vsql commands
alias vsql-prod='/opt/vertica/bin/vsql -h vertica-internal.prod.adnxs.net -U jwang -w AphonY05gooFah'
alias vsql-sand="$vertica_path -h vertica-primary.sand-08.adnxs.net -U $sand_un_1 -w $sand_p_2"
alias vsql-test='/opt/vertica/bin/vsql -h 06.vertica.test01.nym1 -U jwang -w tyPIer^2undine'

# psql commands
alias psql-prod='psql -h 01.postgresql.prod.nym1 -U fraud_rw fraud_engineering'
alias psql-sand='psql -h 01.postgresql.sand-08.nym1 -U fraud_rw fraud_engineering'

# mysql commands
alias mysql-local='mysql -uroot jwang'
alias mysql-prod='mysql --prompt "mysql-prod> " -u$my_un -p$my_pw -hmysql-slave.prod.nym1.adnxs.net api'
alias mysql-sand='mysql -A --prompt "mysql-sand> " -uapp_etl_opt -pTeWa2nDQx1Sw -hmysql-slave.sand-08.adnxs.net optimization'
alias mysql-opt-master='mysql --prompt "mysql-opt-prod> " -ujwang -pyoiCk87waKens -h32.mysql.prod.nym1 optimization'
alias mysql-opt='mysql --prompt "mysql-opt-slave> " -ujwang -pyoiCk87waKens -hmysql-opt-slave.prod.adnxs.net optimization'
alias mysql-icq-metrics='mysql --prompt "mysql-icq-metrics> " -u$my_un -p$my_pw -hmysql-icq-metrics-master.prod.adnxs.net icq_metrics'
#alias mysql-budget-prod='mysql --prompt "mysql-budget-prod> " -ujwang -pyoiCk87waKens -hmysql-budget-master.prod.adnxs.net'
alias mysql-budget-prod='mysql --prompt "mysql-budget-prod> " -ujwang -pJyl10841224 -hmysql-budget-master.prod.adnxs.net optimization'
#alias mysql-budget='mysql --prompt "mysql-budget-slave> " -ujwang -pyoiCk87waKens -hmysql-budget-slave.prod.adnxs.net'
alias mysql-budget='mysql --prompt "mysql-budget-slave> " -ujwang -pJyl10841224 -hmysql-budget-slave.prod.adnxs.net optimization'

# Other commands
# source profile
alias psaux='ps -aux | grep'

# ls and prompt setup
alias ls='ls -p'
export CLICOLOR=1
export LSCOLORS=ExFxCxDxBxegedabagacad
export PS1='\[\033[01;32m\]\u@\h\[\033[00m\] \[\033[01;34m\]\w\[\033[00m\]$(git branch &>/dev/null; if [ $? -eq 0 ]; then echo "\[\033[01;33m\]($(git branch | grep ^*|sed s/\*\ //))\[\033[00m\]"; fi)$ '
export PYTHONPATH=/home/jwang/inv-quality

# for vsql
export ODBCINI=/usr/local/etc/odbc.ini
export ODBCSYSINI=/usr/local/etc

# python
alias python='/usr/bin/python2.7'
alias pep8='~/dotfiles/pep8.py'
alias fraud-report='python /home/jwang/inv-quality/fraud_report/main.py --conf="/home/jwang/configs/inv-quality/fraud_report/main.conf" --verbose'
alias gitpush='git push origin HEAD:refs/for/master'
declare -x ODBCINI="/etc/odbcinst.ini"
declare -x ODBCSYSINI="/etc"

# path shortcut
hadoop='/opt/local/share/java/hadoop-1.1.1/'
python_lib='/opt/python27/lib/python2.7/'

############################ CURL TOOL ###############################
AUTHDIR=/home/jwang/.appnexus_api_wrapper
VERBOSE=1

SAND="sand"
PROD="prod"
STAGE="stage"

FRAUD_LOCAL="fraud-local"
FRAUD_LOCAL_COOKIE=${AUTHDIR}/fraud_local_cookie
FRAUD_LOCAL_URL="localhost:5000/"
FRAUD_LOCAL_AUTH=fraud_authfile

FRAUD_PROD="fraud-prod"
FRAUD_PROD_COOKIE=${AUTHDIR}/fraud_prod_cookie
FRAUD_PROD_URL="http://inv-quality.adnxs.net:5001/"
FRAUD_PROD_AUTH=fraud_authfile

function chelp() {
    echo ""
    echo "The available commands are:"
    echo "    auth(service-type)"
    echo "    switchto(user)"
    echo "    curlget(target)"
    echo "    meta(service)"
    echo "    curlput(target, json)"
    echo "    curlputfile(target, json filename)"
    echo "    curlpost(target, json)"
    echo "    curlpostfile(target, json filename)"
    echo ""
    echo "The service-types are:"
    echo "    api-prod"
    echo "    console-prod"
    echo "    api-sand"
    echo "    console-sand"    
    echo "    fraud-local
    echo "    fraud-dev
    echo "    fraud-sand
    echo "    fraud-prod
    echo ""
}

function auth() {
    JSON_PRINT=" | json_xs"

    if [ "$1" == "$FRAUD_PROD" ]; then
        CURR_COOKIE=$FRAUD_PROD_COOKIE
        CURR_URL=$FRAUD_PROD_URL
        CURR_CONN="fraud-prod"
    CURR_AUTH_FILE=$FRAUD_PROD_AUTH
    elif [ "$1" == "$FRAUD_LOCAL" ]; then
        CURR_COOKIE=$FRAUD_LOCAL_COOKIE
        CURR_URL=$FRAUD_LOCAL_URL
        CURR_CONN="fraud-local"
    CURR_AUTH_FILE=$FRAUD_LOCAL_AUTH
    else
        echo "The proper usage is auth [fraud-prod/fraud-sand/fraud-local]"
    fi

    eval "curl -b $CURR_COOKIE -c $CURR_COOKIE -X POST -H 'Content-Type:application/json' --data-binary @${AUTHDIR}${CURR_AUTH_FILE} \"${CURR_URL}auth\" $JSON_PRINT"
}


######################## END OF CURL TOOL ############################

############################### End of setup for Appnexus #############################