############################### bash_profile setup for Appnexus #############################

# temp commands
alias rs-work-queue='sudo ~/my_bin/schedulerd restart; sudo ~/my_bin/workerd restart'
alias rs-fraudsvc='sudo ~/my_bin/fraudsvcd restart'

alias runserver='python /home/jwang/inv-quality/fraud_service/runserver.py --conf=/home/jwang/my_bin/fraud_service.conf'
alias view-logs='sudo tail -300f /var/log/messages'
alias send='python ~/my_bin/sender.py'
alias mount-dev='sshfs jwang@64.210.63.215:/home/jwang ~/dev'

# fraud service
export FRAUD_SERVICE_DB_ENGINE='sqlite:////tmp/test.db' 

# ssh commands
alias jump='ssh -AY jwang@jump.nym1.adnxs.net'
alias dev='ssh -AY devbox' 

# sync commands
alias sync='rsync -avz --delete -e ssh'
alias sync-dot='sync ~/dotfiles devbox:/home/jwang'

# Database variables
vertica_path='/opt/vertica/bin/vsql'
my_un='jwang'
my_pw='Appnexus20130423'
sand_un_1='app_etl_optimization'
sand_p_1='TeWa2nDQx1Sw'
sand_p_2='san60pt'

# vsql commands
alias vsql-prod='/opt/vertica/bin/vsql -h vertica-internal.prod.adnxs.net -U jwang -w AphonY05gooFah'
alias vsql-sand="$vertica_path -h vertica-primary.sand-08.adnxs.net -U $sand_un_1 -w $sand_p_2"
alias vsql-test='/opt/vertica/bin/vsql -h 06.vertica.test01.nym1 -U jwang -w tyPIer^2undine'

# psql commands
alias psql-prod='psql -h pg-general-services-master.prod.adnxs.net -U fraud_rw fraud_engineering'
alias psql-sand='psql -h pg-general-services-master.sand-08.adnxs.net  -U fraud_rw fraud_engineering'

# mysql commands
alias mysql-local='mysql -uroot jwang'
alias mysql-prod='mysql --prompt "mysql-prod> " -u$my_un -p$my_pw -hmysql-slave.prod.nym1.adnxs.net api'
alias mysql-sand='mysql -A --prompt "mysql-sand> " -uapp_etl_opt -pTeWa2nDQx1Sw -hmysql-slave.sand-08.adnxs.net optimization'
alias mysql-opt-master='mysql --prompt "mysql-opt-prod> " -ujwang -pyoiCk87waKens -h32.mysql.prod.nym1 optimization'
alias mysql-opt='mysql --prompt "mysql-opt-slave> " -ujwang -pyoiCk87waKens -hmysql-opt-slave.prod.adnxs.net optimization'
alias mysql-icq-metrics='mysql --prompt "mysql-icq-metrics> " -u$my_un -p$my_pw -hmysql-icq-metrics-master.prod.adnxs.net icq_metrics'
#alias mysql-budget-prod='mysql --prompt "mysql-budget-prod> " -ujwang -pyoiCk87waKens -hmysql-budget-master.prod.adnxs.net'
alias mysql-budget-prod='mysql --prompt "mysql-budget-prod> " -ujwang -pJyl10841224 -hmysql-budget-master.prod.adnxs.net optimization'
#alias mysql-budget='mysql --prompt "mysql-budget-slave> " -ujwang -pyoiCk87waKens -hmysql-budget-slave.prod.adnxs.net'
alias mysql-budget='mysql --prompt "mysql-budget-slave> " -ujwang -pJyl10841224 -hmysql-budget-slave.prod.adnxs.net optimization'

# Other commands
# source profile
alias psaux='ps -aux | grep'

# ls and prompt setup
alias ls='ls -p'
export CLICOLOR=1
export LSCOLORS=ExFxCxDxBxegedabagacad
export PS1='\[\033[01;32m\]\u@\h\[\033[00m\] \[\033[01;34m\]\w\[\033[00m\]$(git branch &>/dev/null; if [ $? -eq 0 ]; then echo "\[\033[01;33m\]($(git branch | grep ^*|sed s/\*\ //))\[\033[00m\]"; fi)$ '
export PYTHONPATH=/home/jwang/inv-quality

# for vsql
export ODBCINI=/usr/local/etc/odbc.ini
export ODBCSYSINI=/usr/local/etc

# python
alias python='/usr/bin/python2.7'
alias pep8='~/dotfiles/pep8.py'
alias fraud-report='python /home/jwang/inv-quality/fraud_report/main.py --conf="/home/jwang/configs/inv-quality/fraud_report/main.conf" --verbose'
alias gitpush='git push origin HEAD:refs/for/master'
alias gitlog='git log --pretty=format:"%cr %h %s" --graph'
declare -x ODBCINI="/etc/odbcinst.ini"
declare -x ODBCSYSINI="/etc"

# path shortcut
hadoop='/opt/local/share/java/hadoop-1.1.1/'
python_lib='/opt/python27/lib/python2.7/'

############################ CURL TOOL ###############################
AUTHDIR="/home/jwang/.appnexus_api_wrapper/"
VERBOSE=1

FRAUD_LOCAL="fraud-local"
FRAUD_LOCAL_COOKIE=${AUTHDIR}fraud_local_cookie
FRAUD_LOCAL_URL="localhost:5000/"
FRAUD_LOCAL_AUTH=fraud_authfile

FRAUD_DEV="fraud-dev"
FRAUD_DEV_COOKIE=${AUTHDIR}fraud_dev_cookie
FRAUD_DEV_URL="13.jwang.dev.lax1:80/"
FRAUD_DEV_AUTH=fraud_authfile

FRAUD_PROD="fraud-prod"
FRAUD_PROD_COOKIE=${AUTHDIR}fraud_prod_cookie
FRAUD_PROD_URL="http://inv-quality.adnxs.net:5001/"
FRAUD_PROD_AUTH=fraud_authfile

API_PROD="api-prod"
API_PROD_COOKIE=${AUTHDIR}api_prod_cookie
API_PROD_URL="http://api.adnxs.com/"
API_PROD_AUTH=api_authfile

API_SAND="api-sand"
API_SAND_COOKIE=${AUTHDIR}api_sand_cookie
API_SAND_URL="http://api.sand-08.adnxs.net/"
API_SAND_AUTH=api_authfile

function chelp() {
    echo ""
    echo "The available commands are:"
    echo "    auth(service-type)"
    echo "    curlget(target)"
    echo "    curlput(target, json)"
    echo "    curlpost(target, json)"
    echo ""
    echo "The service-types are:"
    echo "    fraud-local"
    echo "    fraud-dev"
    echo "    fraud-prod"
    echo "    api-prod"
    echo "    api-sand"
    echo ""
}

function auth() {
    if [ "$1" == "$FRAUD_PROD" ]; then
        CURR_COOKIE=$FRAUD_PROD_COOKIE
        CURR_URL=$FRAUD_PROD_URL
        CURR_CONN="fraud-prod"
        CURR_AUTH_FILE=$FRAUD_PROD_AUTH
    elif [ "$1" == "$FRAUD_LOCAL" ]; then
        CURR_COOKIE=$FRAUD_LOCAL_COOKIE
        CURR_URL=$FRAUD_LOCAL_URL
        CURR_CONN="fraud-local"
        CURR_AUTH_FILE=$FRAUD_LOCAL_AUTH
    elif [ "$1" == "$FRAUD_DEV" ]; then
        CURR_COOKIE=$FRAUD_DEV_COOKIE
        CURR_URL=$FRAUD_DEV_URL
        CURR_CONN="fraud-dev"
        CURR_AUTH_FILE=$FRAUD_DEV_AUTH
    elif [ "$1" == "$API_PROD" ]; then
        CURR_COOKIE=$API_PROD_COOKIE
        CURR_URL=$API_PROD_URL
        CURR_CONN="api-prod"
        CURR_AUTH_FILE=$API_PROD_AUTH
    elif [ "$1" == "$API_SAND" ]; then
        CURR_COOKIE=$API_SAND_COOKIE
        CURR_URL=$API_SAND_URL
        CURR_CONN="api-sand"
        CURR_AUTH_FILE=$API_SAND_AUTH
    else
        echo "The proper usage is auth [fraud-prod/fraud-dev/fraud-local/api-prod/api-sand]"
    fi

    CMD="curl -s -b $CURR_COOKIE -c $CURR_COOKIE -X POST -H 'Content-Type:application/json' --data-binary @${AUTHDIR}${CURR_AUTH_FILE} \"${CURR_URL}auth\""

    if [ $VERBOSE -gt 0 ]
    then
        echo "Using: ${CMD}"
    fi
    eval "${CMD}"
}

function curlget() {
    CMD="curl -X GET -b $CURR_COOKIE -c $CURR_COOKIE"
    if [ $# -gt 1 ]; then
        CMD="$CMD -d '${2}'"
    fi
    CMD="$CMD \"${CURR_URL}${1}\""
    
    if [ $VERBOSE -gt 0 ]
    then
        echo "Using: ${CMD}"
    fi
    eval "${CMD}"
}

function curlput() {
    CMD="curl -s -b $CURR_COOKIE -c $CURR_COOKIE -X PUT -d '${2}' \"${CURR_URL}${1}\""
    if [ $VERBOSE -gt 0 ]; then
       echo "Using: ${CMD}"
    fi
    eval "${CMD}"
}

function curlpost() {
    CMD="curl -s -b $CURR_COOKIE -c $CURR_COOKIE -X POST -H 'Content-Type:application/json' -d '${2}' \"${CURR_URL}${1}\""
    if [ $VERBOSE -gt 0 ]; then
       echo "Using: ${CMD}"
    fi
    eval "${CMD}"
}

function pub_test(){
    for MEMBER_TAG in $(mysql-prod -Nse "select id, member_id from api.publisher where id in ($@)" | sed "s/\t/\?member_id\=/")
    do
        echo "$MEMBER_TAG"
    done
}


######################## END OF CURL TOOL ############################

############################### End of setup for Appnexus #############################
